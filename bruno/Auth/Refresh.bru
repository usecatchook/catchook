meta {
  name: Refresh Session
  type: http
  seq: 4
}

post {
  url: {{apiUrl}}/auth/refresh
  body: none
  auth: none
}

headers {
  Authorization: {{session_id}}
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Should return success", function() {
    expect(res.getBody()).to.have.property('success', true);
    expect(res.getBody()).to.have.property('message', 'Session refreshed successfully');
    expect(res.getBody()).to.have.property('data');
  });
  
  test("Should return session data", function() {
    const data = res.getBody().data;
    expect(data).to.have.property('session_id');
  });
  
  // Mettre Ã  jour le session_id
  if (res.getStatus() === 200) {
    const data = res.getBody().data;
    bru.setEnvVar("session_id", data.session_id);
  }
}